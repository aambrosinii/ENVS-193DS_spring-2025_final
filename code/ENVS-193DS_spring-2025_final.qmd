---
title: "envs193final"
format: html
editor: visual
github: https://github.com/aambrosinii/ENVS-193DS_spring-2025_final.git
---

Problem 1

a: In part 1, they preformed a Pearson correlation test in order to evaluate whether there is a linear relationship between two continuous variables, which were distance from headwater (km) and annual total nitrogen load (kg/year). In part 2, they used an ANOVA test to compare the means of nitrogen load across multiple groups.

b: It would be useful to include further summary statistics such as mean, standard deviation, or sample size. This would provide context on the magnitude and spread of nitrogen load values within each source group. Because ANOVA only determines if at least one group differs significantly, a Post-Hoc test such as Tukey's HSD would also be useful to compare all pairs of sources to identify which differ in mean nitrogen load significantly.

c: Part 1: Nitrogen load increased with distance from the headwater, suggesting that downstream areas receive more nitrogen annually (Pearson correlation test, r=correlation coefficient, p=0.03, a=significance level.

Part 2: Average nitrogen load differed significantly among sources, indicating that some land use types contribute more nitrogen than others. (One way ANOVA, f=f statistic, df=degrees of freedom, p=0.02, a=significance level).

Problem 2

a:

```{r}
# Loading in packages
library(tidyverse)
library(lubridate)
library(ggplot2)

# Reading in data
sst <- read.csv("data/SST_update2023.csv")

# Cleaning and summarizing 
sst_clean <- sst |>
mutate(date = ymd(date)) |> # Converting date column to Date Type
  mutate(
    year = factor(year(date)),
    month = factor(month(date, label = TRUE), # Extracting year as a factor
                      levels = month.abb, ordered = TRUE) # Extracting month as a factor
  ) |>
  group_by(year, month) |>       # Grouping by year and month
  summarise(mean_monthly_sst = mean(temp, na.rm = TRUE),  # Calculating monthly mean SST
            .groups = "drop")
# Displaying 5 rows from cleaned data 
sst_clean |>
  slice_sample(n = 5)
# Displaying structure
str(sst_clean)
```

b:

```{r}
# Filter sst_clean to include only years 2018 through 2023
sst_filtered <- sst_clean %>%
  mutate(year = factor(year)) %>%
  filter(year %in% c("2018", "2019", "2020", "2021", "2022", "2023"))

# Creating custom color gradient
years <- sort(unique(sst_filtered$year))
color_gradient <- colorRampPalette(c("mistyrose", "firebrick"))(length(years))
names(color_gradient) <- years

# Creating plot
ggplot(sst_filtered, aes(x = month, y = mean_monthly_sst, group = year, color = year)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  scale_color_manual(values = color_gradient) +
  labs(
    title = "Monthly Sea Surface Temperature (2018–2023)",
    x = "Month",
    y = "Mean monthly sea surface temperature (°C)",
    color = "Year"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.85),  # Shift title right
    panel.background = element_rect(fill = "#d7e5e3", color = NA),  # Background color
    panel.border = element_rect(fill = NA, color = "black", size = 0.8),  # Border
 legend.position = c(0.1, 0.8),  # Legend inside plot panel (x, y from 0 to 1)
    legend.background = element_rect(fill = "white", color = "black")
  )
```
